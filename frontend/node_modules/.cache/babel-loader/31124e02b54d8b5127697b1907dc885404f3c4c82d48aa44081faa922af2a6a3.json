{"ast":null,"code":"var _jsxFileName = \"/Users/vc/Desktop/\\u4EC5\\u4F5C\\u4E3A\\u526F\\u672C/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PokerTable from './components/PokerTable';\nimport GameHistoryTable from './components/GameHistoryTable';\nimport TrainingMetrics from './components/TrainingMetrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameHistory, setGameHistory] = useState([]);\n  const [cards, setCards] = useState({\n    cfr: null,\n    stupid: null\n  });\n  const [stats, setStats] = useState({\n    cfrWins: 0,\n    stupidWins: 0,\n    total: 0\n  });\n  const [isBotVsBot, setIsBotVsBot] = useState(false);\n  const [numGames, setNumGames] = useState(1000);\n  const [isDemoRunning, setIsDemoRunning] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n  const playGame = () => {\n    // Clear previous game history\n    setGameHistory([]);\n\n    // Deal cards\n    const dealtCards = [1, 2, 3];\n    shuffleArray(dealtCards);\n\n    // Randomly decide who goes first\n    const firstPlayer = Math.random() > 0.5 ? 'cfr' : 'stupid';\n    const secondPlayer = firstPlayer === 'cfr' ? 'stupid' : 'cfr';\n\n    // Assign cards\n    setCards({\n      cfr: firstPlayer === 'cfr' ? dealtCards[0] : dealtCards[1],\n      stupid: firstPlayer === 'stupid' ? dealtCards[0] : dealtCards[1]\n    });\n\n    // Play the game\n    const history = playRound(firstPlayer, secondPlayer, dealtCards[0], dealtCards[1]);\n    setGameHistory(history);\n\n    // Update stats\n    const winner = determineWinner(history, firstPlayer, secondPlayer, dealtCards[0], dealtCards[1]);\n    if (winner === 'cfr') {\n      setStats(prev => ({\n        ...prev,\n        cfrWins: prev.cfrWins + 1,\n        total: prev.total + 1\n      }));\n    } else if (winner === 'stupid') {\n      setStats(prev => ({\n        ...prev,\n        stupidWins: prev.stupidWins + 1,\n        total: prev.total + 1\n      }));\n    }\n  };\n  const playRound = (firstPlayer, secondPlayer, firstCard, secondCard) => {\n    const history = [];\n\n    // First player's action\n    const firstAction = firstPlayer === 'cfr' ? getCFRAction(firstCard) : 'bet'; // Stupid bot always bets\n    history.push({\n      player: firstPlayer,\n      action: firstAction\n    });\n\n    // Second player's action\n    const secondAction = secondPlayer === 'cfr' ? getCFRAction(secondCard) : 'bet'; // Stupid bot always bets\n    history.push({\n      player: secondPlayer,\n      action: secondAction\n    });\n\n    // If first player passed and second player bet, first player gets chance to call\n    if (firstAction === 'pass' && secondAction === 'bet') {\n      const finalAction = firstPlayer === 'cfr' ? getCFRAction(firstCard) : 'bet'; // Stupid bot always bets\n      history.push({\n        player: firstPlayer,\n        action: finalAction\n      });\n    }\n    return history;\n  };\n  const getCFRAction = card => {\n    // With King (3), always bet since it's the strongest card\n    if (card === 3) return 'bet';\n\n    // With Jack (1), always pass since it's the weakest card\n    if (card === 1) return 'pass';\n\n    // With Queen (2), use a mixed strategy:\n    // - If we're first to act, bet 75% of the time\n    // - If we're second to act and opponent bet, call 60% of the time\n    // - If we're second to act and opponent passed, bet 80% of the time\n    const random = Math.random();\n    if (gameHistory.length === 0) {\n      // First to act\n      return random < 0.75 ? 'bet' : 'pass';\n    } else if (gameHistory.length === 1) {\n      // Second to act\n      if (gameHistory[0].action === 'bet') {\n        return random < 0.60 ? 'bet' : 'pass';\n      } else {\n        return random < 0.80 ? 'bet' : 'pass';\n      }\n    } else {\n      // Final call\n      return random < 0.60 ? 'bet' : 'pass';\n    }\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n  const determineWinner = (history, firstPlayer, secondPlayer, firstCard, secondCard) => {\n    if (history.length < 2) return null;\n    const moves = history.slice(-2);\n\n    // Both pass\n    if (moves[0].action === 'pass' && moves[1].action === 'pass') {\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n\n    // First bets, second passes\n    if (moves[0].action === 'bet' && moves[1].action === 'pass') {\n      return firstPlayer;\n    }\n\n    // First passes, second bets\n    if (moves[0].action === 'pass' && moves[1].action === 'bet') {\n      if (history.length > 2 && history[2].action === 'pass') {\n        return secondPlayer;\n      }\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n\n    // Both bet\n    if (moves[0].action === 'bet' && moves[1].action === 'bet') {\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n    return null;\n  };\n  const runBotVsBot = () => {\n    setIsBotVsBot(true);\n    setStats({\n      cfrWins: 0,\n      stupidWins: 0,\n      total: 0\n    });\n    for (let i = 0; i < numGames; i++) {\n      playGame();\n    }\n  };\n  const runSlowDemo = async () => {\n    setIsDemoRunning(true);\n    setIsBotVsBot(true);\n    setStats({\n      cfrWins: 0,\n      stupidWins: 0,\n      total: 0\n    });\n    setGameHistory([]);\n\n    // Play 25 games with 0.5 second delay between each\n    for (let i = 0; i < 3000; i++) {\n      playGame();\n      await new Promise(resolve => setTimeout(resolve, 0)); // 0.5 second pause\n    }\n    setIsDemoRunning(false);\n  };\n  const toggleMetrics = () => {\n    setShowMetrics(!showMetrics);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Kuhn Poker: CFR Bot vs Stupid Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button-toggle ${showMetrics ? 'active' : ''}`,\n          onClick: toggleMetrics,\n          children: showMetrics ? 'Hide Training Metrics' : 'Show Training Metrics'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), showMetrics && /*#__PURE__*/_jsxDEV(TrainingMetrics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary\",\n            onClick: playGame,\n            disabled: isDemoRunning,\n            children: \"Play Single Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary demo-button\",\n            onClick: runSlowDemo,\n            disabled: isDemoRunning,\n            children: isDemoRunning ? 'Demo Running...' : 'Run Slow Demo'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Win Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thermometer-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thermometer-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"percentage-label\",\n                  children: [stats.total > 0 ? (stats.cfrWins / stats.total * 100).toFixed(1) : 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `thermometer ${stats.cfrWins >= stats.stupidWins ? 'green' : 'red'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fill\",\n                    style: {\n                      height: `${stats.total > 0 ? stats.cfrWins / stats.total * 100 : 0}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bot-label\",\n                  children: \"CFR Bot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thermometer-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"percentage-label\",\n                  children: [stats.total > 0 ? (stats.stupidWins / stats.total * 100).toFixed(1) : 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `thermometer ${stats.stupidWins > stats.cfrWins ? 'green' : 'red'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fill\",\n                    style: {\n                      height: `${stats.total > 0 ? stats.stupidWins / stats.total * 100 : 0}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bot-label\",\n                  children: \"Stupid Bot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-area\",\n          children: /*#__PURE__*/_jsxDEV(PokerTable, {\n            gameHistory: gameHistory,\n            cards: cards,\n            onPlayClick: playGame,\n            isBotVsBot: isBotVsBot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-container\",\n          children: /*#__PURE__*/_jsxDEV(GameHistoryTable, {\n            history: gameHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kuhn Poker GTO Solver Implementation - CFR Bot vs Stupid Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3+NJPvk4uSlJQJ2n0oiSXgRjfzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PokerTable","GameHistoryTable","TrainingMetrics","jsxDEV","_jsxDEV","App","_s","gameHistory","setGameHistory","cards","setCards","cfr","stupid","stats","setStats","cfrWins","stupidWins","total","isBotVsBot","setIsBotVsBot","numGames","setNumGames","isDemoRunning","setIsDemoRunning","showMetrics","setShowMetrics","playGame","dealtCards","shuffleArray","firstPlayer","Math","random","secondPlayer","history","playRound","winner","determineWinner","prev","firstCard","secondCard","firstAction","getCFRAction","push","player","action","secondAction","finalAction","card","length","array","i","j","floor","moves","slice","runBotVsBot","runSlowDemo","Promise","resolve","setTimeout","toggleMetrics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toFixed","style","height","onPlayClick","_c","$RefreshReg$"],"sources":["/Users/vc/Desktop/仅作为副本/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PokerTable from './components/PokerTable';\nimport GameHistoryTable from './components/GameHistoryTable';\nimport TrainingMetrics from './components/TrainingMetrics';\n\n\nfunction App() {\n  const [gameHistory, setGameHistory] = useState([]);\n  const [cards, setCards] = useState({ cfr: null, stupid: null });\n  const [stats, setStats] = useState({ cfrWins: 0, stupidWins: 0, total: 0 });\n  const [isBotVsBot, setIsBotVsBot] = useState(false);\n  const [numGames, setNumGames] = useState(1000);\n  const [isDemoRunning, setIsDemoRunning] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n\n  const playGame = () => {\n    // Clear previous game history\n    setGameHistory([]);\n    \n    // Deal cards\n    const dealtCards = [1, 2, 3];\n    shuffleArray(dealtCards);\n    \n    // Randomly decide who goes first\n    const firstPlayer = Math.random() > 0.5 ? 'cfr' : 'stupid';\n    const secondPlayer = firstPlayer === 'cfr' ? 'stupid' : 'cfr';\n    \n    // Assign cards\n    setCards({\n      cfr: firstPlayer === 'cfr' ? dealtCards[0] : dealtCards[1],\n      stupid: firstPlayer === 'stupid' ? dealtCards[0] : dealtCards[1]\n    });\n    \n    // Play the game\n    const history = playRound(firstPlayer, secondPlayer, dealtCards[0], dealtCards[1]);\n    setGameHistory(history);\n    \n    // Update stats\n    const winner = determineWinner(history, firstPlayer, secondPlayer, dealtCards[0], dealtCards[1]);\n    if (winner === 'cfr') {\n      setStats(prev => ({ ...prev, cfrWins: prev.cfrWins + 1, total: prev.total + 1 }));\n    } else if (winner === 'stupid') {\n      setStats(prev => ({ ...prev, stupidWins: prev.stupidWins + 1, total: prev.total + 1 }));\n    }\n  };\n\n  const playRound = (firstPlayer, secondPlayer, firstCard, secondCard) => {\n    const history = [];\n    \n    // First player's action\n    const firstAction = firstPlayer === 'cfr' \n      ? getCFRAction(firstCard) \n      : 'bet'; // Stupid bot always bets\n    history.push({ player: firstPlayer, action: firstAction });\n    \n    // Second player's action\n    const secondAction = secondPlayer === 'cfr' \n      ? getCFRAction(secondCard) \n      : 'bet'; // Stupid bot always bets\n    history.push({ player: secondPlayer, action: secondAction });\n    \n    // If first player passed and second player bet, first player gets chance to call\n    if (firstAction === 'pass' && secondAction === 'bet') {\n      const finalAction = firstPlayer === 'cfr' \n        ? getCFRAction(firstCard) \n        : 'bet'; // Stupid bot always bets\n      history.push({ player: firstPlayer, action: finalAction });\n    }\n    \n    return history;\n  };\n\n  const getCFRAction = (card) => {\n    // With King (3), always bet since it's the strongest card\n    if (card === 3) return 'bet';\n    \n    // With Jack (1), always pass since it's the weakest card\n    if (card === 1) return 'pass';\n    \n    // With Queen (2), use a mixed strategy:\n    // - If we're first to act, bet 75% of the time\n    // - If we're second to act and opponent bet, call 60% of the time\n    // - If we're second to act and opponent passed, bet 80% of the time\n    const random = Math.random();\n    if (gameHistory.length === 0) {  // First to act\n      return random < 0.75 ? 'bet' : 'pass';\n    } else if (gameHistory.length === 1) {  // Second to act\n      if (gameHistory[0].action === 'bet') {\n        return random < 0.60 ? 'bet' : 'pass';\n      } else {\n        return random < 0.80 ? 'bet' : 'pass';\n      }\n    } else {  // Final call\n      return random < 0.60 ? 'bet' : 'pass';\n    }\n  };\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  const determineWinner = (history, firstPlayer, secondPlayer, firstCard, secondCard) => {\n    if (history.length < 2) return null;\n\n    const moves = history.slice(-2);\n    \n    // Both pass\n    if (moves[0].action === 'pass' && moves[1].action === 'pass') {\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n    \n    // First bets, second passes\n    if (moves[0].action === 'bet' && moves[1].action === 'pass') {\n      return firstPlayer;\n    }\n    \n    // First passes, second bets\n    if (moves[0].action === 'pass' && moves[1].action === 'bet') {\n      if (history.length > 2 && history[2].action === 'pass') {\n        return secondPlayer;\n      }\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n    \n    // Both bet\n    if (moves[0].action === 'bet' && moves[1].action === 'bet') {\n      return firstCard > secondCard ? firstPlayer : secondPlayer;\n    }\n    \n    return null;\n  };\n\n  const runBotVsBot = () => {\n    setIsBotVsBot(true);\n    setStats({ cfrWins: 0, stupidWins: 0, total: 0 });\n    \n    for (let i = 0; i < numGames; i++) {\n      playGame();\n    }\n  };\n\n  const runSlowDemo = async () => {\n    setIsDemoRunning(true);\n    setIsBotVsBot(true);\n    setStats({ cfrWins: 0, stupidWins: 0, total: 0 });\n    setGameHistory([]);\n\n    // Play 25 games with 0.5 second delay between each\n    for (let i = 0; i < 3000; i++) {\n      playGame();\n      await new Promise(resolve => setTimeout(resolve, 0)); // 0.5 second pause\n    }\n    setIsDemoRunning(false);\n  };\n\n  const toggleMetrics = () => {\n    setShowMetrics(!showMetrics);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Kuhn Poker: CFR Bot vs Stupid Bot</h1>\n        <div className=\"header-buttons\">\n          <button \n            className={`button-toggle ${showMetrics ? 'active' : ''}`} \n            onClick={toggleMetrics}\n          >\n            {showMetrics ? 'Hide Training Metrics' : 'Show Training Metrics'}\n          </button>\n        </div>\n      </header>\n\n      {showMetrics && <TrainingMetrics />}\n\n      <main className=\"main-content\">\n        <div className=\"game-container\">\n          <div className=\"game-controls\">\n            \n            <button \n              className=\"button-primary\" \n              onClick={playGame}\n              disabled={isDemoRunning}\n            >\n              Play Single Game\n            </button>\n            <button \n              className=\"button-primary demo-button\" \n              onClick={runSlowDemo}\n              disabled={isDemoRunning}\n            >\n              {isDemoRunning ? 'Demo Running...' : 'Run Slow Demo'}\n            </button>\n            <div className=\"stats-container\">\n              <h3>Win Statistics</h3>\n              <div className=\"thermometer-wrapper\">\n                {/* CFR BOT */}\n                <div className=\"thermometer-group\">\n                  <div className=\"percentage-label\">\n                    {stats.total > 0 ? (stats.cfrWins / stats.total * 100).toFixed(1) : 0}%\n                  </div>\n                  <div className={`thermometer ${stats.cfrWins >= stats.stupidWins ? 'green' : 'red'}`}>\n                    <div\n                      className=\"fill\"\n                      style={{ height: `${stats.total > 0 ? (stats.cfrWins / stats.total) * 100 : 0}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"bot-label\">CFR Bot</div>\n                </div>\n\n                {/* STUPID BOT */}\n                <div className=\"thermometer-group\">\n                  <div className=\"percentage-label\">\n                    {stats.total > 0 ? (stats.stupidWins / stats.total * 100).toFixed(1) : 0}%\n                  </div>\n                  <div className={`thermometer ${stats.stupidWins > stats.cfrWins ? 'green' : 'red'}`}>\n                    <div\n                      className=\"fill\"\n                      style={{ height: `${stats.total > 0 ? (stats.stupidWins / stats.total) * 100 : 0}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"bot-label\">Stupid Bot</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"game-area\">\n            <PokerTable \n              gameHistory={gameHistory}\n              cards={cards}\n              onPlayClick={playGame}\n              isBotVsBot={isBotVsBot}\n            />\n          </div>\n\n          <div className=\"analysis-container\">\n            <GameHistoryTable history={gameHistory} />\n          </div>\n        </div>\n      </main>\n\n      <footer>\n        <p>Kuhn Poker GTO Solver Implementation - CFR Bot vs Stupid Bot</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}