{"ast":null,"code":"var _jsxFileName = \"/Users/vc/Desktop/\\u4EC5\\u4F5C\\u4E3A\\u526F\\u672C/frontend/src/components/PokerTable.js\",\n  _s = $RefreshSig$();\n// components/PokerTable.js\nimport React, { useState, useEffect } from 'react';\nimport './PokerTable.css';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokerTable = ({\n  gameHistory,\n  isBotVsBot,\n  cards,\n  onPlayClick\n}) => {\n  _s();\n  const [gameState, setGameState] = useState('new'); // 'new', 'ongoing', 'finished'\n  const [winner, setWinner] = useState(null);\n  const [pot, setPot] = useState(1); // Starting pot in Kuhn Poker\n\n  useEffect(() => {\n    // Reset game state when new cards are dealt\n    if (gameHistory.length === 0) {\n      setGameState('new');\n      setWinner(null);\n      setPot(1);\n      // Remove 'revealed' class from cards\n      const cardEls = document.querySelectorAll('.card');\n      cardEls.forEach(el => el.classList.remove('revealed'));\n    }\n\n    // Update pot size\n    const betCount = gameHistory.filter(move => move.action === 'bet').length;\n    setPot(1 + betCount);\n\n    // Check if game has ended\n    if (gameHistory.length >= 2) {\n      const lastTwoMoves = gameHistory.slice(-2);\n\n      // Check terminal conditions\n      if (lastTwoMoves[0].action === 'pass' && lastTwoMoves[1].action === 'pass' || lastTwoMoves[0].action === 'bet' && lastTwoMoves[1].action === 'pass' || lastTwoMoves[0].action === 'bet' && lastTwoMoves[1].action === 'bet') {\n        endGame();\n      }\n    }\n  }, [gameHistory]);\n  const endGame = () => {\n    setGameState('finished');\n\n    // Determine winner based on the last move\n    const lastMove = gameHistory[gameHistory.length - 1];\n    const winner = lastMove.player;\n    setWinner(winner);\n\n    // Reveal both cards\n    setTimeout(() => {\n      const cardEls = document.querySelectorAll('.card');\n      cardEls.forEach(el => el.classList.add('revealed'));\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poker-table\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-felt\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-name\",\n          children: \"CFR Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            value: cards.cfr,\n            faceUp: gameState === 'finished',\n            className: `cfr-card ${gameState === 'finished' ? 'revealed' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pot\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pot-label\",\n            children: \"Pot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pot-amount\",\n            children: pot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `winner-announcement ${winner === 'cfr' ? 'cfr-wins' : 'stupid-wins'}`,\n          children: winner === 'cfr' ? 'CFR Bot Wins!' : 'Stupid Bot Wins!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-name\",\n          children: \"Stupid Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            value: cards.stupid,\n            faceUp: gameState === 'finished',\n            className: `stupid-card ${gameState === 'finished' ? 'revealed' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PokerTable, \"5RmWJ/1byddzPLKq3ZPUs3bTj4E=\");\n_c = PokerTable;\nexport default PokerTable;\nvar _c;\n$RefreshReg$(_c, \"PokerTable\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","PokerTable","gameHistory","isBotVsBot","cards","onPlayClick","_s","gameState","setGameState","winner","setWinner","pot","setPot","length","cardEls","document","querySelectorAll","forEach","el","classList","remove","betCount","filter","move","action","lastTwoMoves","slice","endGame","lastMove","player","setTimeout","add","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","cfr","faceUp","stupid","_c","$RefreshReg$"],"sources":["/Users/vc/Desktop/仅作为副本/frontend/src/components/PokerTable.js"],"sourcesContent":["// components/PokerTable.js\nimport React, { useState, useEffect } from 'react';\nimport './PokerTable.css';\nimport Card from './Card';\n\nconst PokerTable = ({ gameHistory, isBotVsBot, cards, onPlayClick }) => {\n  const [gameState, setGameState] = useState('new'); // 'new', 'ongoing', 'finished'\n  const [winner, setWinner] = useState(null);\n  const [pot, setPot] = useState(1); // Starting pot in Kuhn Poker\n  \n  useEffect(() => {\n    // Reset game state when new cards are dealt\n    if (gameHistory.length === 0) {\n      setGameState('new');\n      setWinner(null);\n      setPot(1);\n      // Remove 'revealed' class from cards\n      const cardEls = document.querySelectorAll('.card');\n      cardEls.forEach(el => el.classList.remove('revealed'));\n    }\n    \n    // Update pot size\n    const betCount = gameHistory.filter(move => move.action === 'bet').length;\n    setPot(1 + betCount);\n    \n    // Check if game has ended\n    if (gameHistory.length >= 2) {\n      const lastTwoMoves = gameHistory.slice(-2);\n      \n      // Check terminal conditions\n      if (\n        (lastTwoMoves[0].action === 'pass' && lastTwoMoves[1].action === 'pass') ||\n        (lastTwoMoves[0].action === 'bet' && lastTwoMoves[1].action === 'pass') ||\n        (lastTwoMoves[0].action === 'bet' && lastTwoMoves[1].action === 'bet')\n      ) {\n        endGame();\n      }\n    }\n  }, [gameHistory]);\n  \n  const endGame = () => {\n    setGameState('finished');\n    \n    // Determine winner based on the last move\n    const lastMove = gameHistory[gameHistory.length - 1];\n    const winner = lastMove.player;\n    setWinner(winner);\n    \n    // Reveal both cards\n    setTimeout(() => {\n      const cardEls = document.querySelectorAll('.card');\n      cardEls.forEach(el => el.classList.add('revealed'));\n    }, 500);\n  };\n  \n  return (\n    <div className=\"poker-table\">\n      <div className=\"table-felt\">\n        <div className=\"player-area\">\n          <div className=\"player-name\">CFR Bot</div>\n          <div className=\"card-container\">\n            <Card \n              value={cards.cfr} \n              faceUp={gameState === 'finished'} \n              className={`cfr-card ${gameState === 'finished' ? 'revealed' : ''}`}\n            />\n          </div>\n        </div>\n        \n        <div className=\"table-center\">\n          <div className=\"pot\">\n            <div className=\"pot-label\">Pot</div>\n            <div className=\"pot-amount\">{pot}</div>\n          </div>\n          \n          {gameState === 'finished' && (\n            <div className={`winner-announcement ${winner === 'cfr' ? 'cfr-wins' : 'stupid-wins'}`}>\n              {winner === 'cfr' ? 'CFR Bot Wins!' : 'Stupid Bot Wins!'}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"player-area\">\n          <div className=\"player-name\">Stupid Bot</div>\n          <div className=\"card-container\">\n            <Card \n              value={cards.stupid} \n              faceUp={gameState === 'finished'} \n              className={`stupid-card ${gameState === 'finished' ? 'revealed' : ''}`}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokerTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}