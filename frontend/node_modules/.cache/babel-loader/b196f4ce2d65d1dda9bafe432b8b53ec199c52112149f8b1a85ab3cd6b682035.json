{"ast":null,"code":"var _jsxFileName = \"/Users/vc/Desktop/\\u4EC5\\u4F5C\\u4E3A\\u526F\\u672C/frontend/src/components/TrainingMetrics.js\",\n  _s = $RefreshSig$();\n// components/TrainingMetrics.js\nimport React, { useState, useEffect } from 'react';\nimport StrategyVisualizer from './StrategyVisualizer';\nimport './TrainingMetrics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingMetrics = () => {\n  _s();\n  const [metricsData, setMetricsData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [iterations, setIterations] = useState(5000);\n  const [trackInterval, setTrackInterval] = useState(100);\n\n  // Fetch metrics data from the server\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/metrics');\n      if (!response.ok) {\n        throw new Error('Failed to fetch metrics data');\n      }\n      const data = await response.json();\n      setMetricsData(data);\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Start a new training session\n  const startTraining = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/train', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          iterations,\n          track_interval: trackInterval\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Training failed');\n      }\n\n      // After training completes, fetch the new metrics\n      await fetchMetrics();\n    } catch (err) {\n      console.error('Error training model:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch metrics when component mounts\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"training-metrics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CFR Training Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"training-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Training Iterations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: iterations,\n          onChange: e => setIterations(parseInt(e.target.value) || 1000),\n          min: \"1000\",\n          max: \"100000\",\n          step: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tracking Interval:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: trackInterval,\n          onChange: e => setTrackInterval(parseInt(e.target.value) || 100),\n          min: \"10\",\n          max: \"1000\",\n          step: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        onClick: startTraining,\n        disabled: loading,\n        children: loading ? 'Training...' : 'Start New Training'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-secondary\",\n        onClick: fetchMetrics,\n        disabled: loading,\n        children: \"Refresh Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Training in progress... This may take several minutes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StrategyVisualizer, {\n      metricsData: metricsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainingMetrics, \"J0uTv1ZMdiJF8rxCBMXSh7cHOYA=\");\n_c = TrainingMetrics;\nexport default TrainingMetrics;\nvar _c;\n$RefreshReg$(_c, \"TrainingMetrics\");","map":{"version":3,"names":["React","useState","useEffect","StrategyVisualizer","jsxDEV","_jsxDEV","TrainingMetrics","_s","metricsData","setMetricsData","loading","setLoading","error","setError","iterations","setIterations","trackInterval","setTrackInterval","fetchMetrics","response","fetch","ok","Error","data","json","err","console","message","startTraining","method","headers","body","JSON","stringify","track_interval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseInt","target","min","max","step","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/vc/Desktop/仅作为副本/frontend/src/components/TrainingMetrics.js"],"sourcesContent":["// components/TrainingMetrics.js\nimport React, { useState, useEffect } from 'react';\nimport StrategyVisualizer from './StrategyVisualizer';\nimport './TrainingMetrics.css';\n\n\nconst TrainingMetrics = () => {\n  const [metricsData, setMetricsData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [iterations, setIterations] = useState(5000);\n  const [trackInterval, setTrackInterval] = useState(100);\n\n  // Fetch metrics data from the server\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/metrics');\n      if (!response.ok) {\n        throw new Error('Failed to fetch metrics data');\n      }\n      \n      const data = await response.json();\n      setMetricsData(data);\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Start a new training session\n  const startTraining = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/train', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          iterations,\n          track_interval: trackInterval\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Training failed');\n      }\n      \n      // After training completes, fetch the new metrics\n      await fetchMetrics();\n      \n    } catch (err) {\n      console.error('Error training model:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch metrics when component mounts\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  return (\n    <div className=\"training-metrics\">\n      <h2>CFR Training Metrics</h2>\n      \n      <div className=\"training-controls\">\n        <div className=\"form-group\">\n          <label>Training Iterations:</label>\n          <input \n            type=\"number\" \n            value={iterations}\n            onChange={(e) => setIterations(parseInt(e.target.value) || 1000)}\n            min=\"1000\"\n            max=\"100000\"\n            step=\"1000\"\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label>Tracking Interval:</label>\n          <input \n            type=\"number\" \n            value={trackInterval}\n            onChange={(e) => setTrackInterval(parseInt(e.target.value) || 100)}\n            min=\"10\"\n            max=\"1000\"\n            step=\"10\"\n          />\n        </div>\n        \n        <button \n          className=\"button-primary\"\n          onClick={startTraining}\n          disabled={loading}\n        >\n          {loading ? 'Training...' : 'Start New Training'}\n        </button>\n        \n        <button\n          className=\"button-secondary\"\n          onClick={fetchMetrics}\n          disabled={loading}\n        >\n          Refresh Metrics\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {loading ? (\n        <div className=\"loading\">Training in progress... This may take several minutes.</div>\n      ) : (\n        <StrategyVisualizer metricsData={metricsData} />\n      )}\n    </div>\n  );\n};\n\nexport default TrainingMetrics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}