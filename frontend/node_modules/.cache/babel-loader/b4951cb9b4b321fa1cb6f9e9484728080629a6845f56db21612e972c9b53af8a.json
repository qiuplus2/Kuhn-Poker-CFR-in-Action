{"ast":null,"code":"var _jsxFileName = \"/Users/vc/Desktop/\\u4EC5\\u4F5C\\u4E3A\\u526F\\u672C/frontend/src/components/StrategyVisualizer.js\";\nimport React from 'react';\nimport './StrategyVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StrategyVisualizer = ({\n  strategies\n}) => {\n  // Helper function to get readable information set descriptions\n  const getInfoSetDescription = infoSet => {\n    const [card, ...actions] = infoSet.split(':');\n    let cardName;\n    switch (card) {\n      case '1':\n        cardName = 'Jack';\n        break;\n      case '2':\n        cardName = 'Queen';\n        break;\n      case '3':\n        cardName = 'King';\n        break;\n      default:\n        cardName = card;\n    }\n    if (actions.length === 0) {\n      return `${cardName} (First to act)`;\n    } else if (actions[0] === 'BET') {\n      return `${cardName} (After opponent bet)`;\n    } else if (actions[0] === 'PASS') {\n      return `${cardName} (After opponent pass)`;\n    }\n    return infoSet;\n  };\n\n  // Filter out the most important information sets to display\n  const keyInfoSets = [\"1:\", \"2:\", \"3:\", \"1:BET\", \"2:BET\", \"3:BET\", \"1:PASS\", \"2:PASS\", \"3:PASS\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategy-visualizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CFR Strategy Probabilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy-grid\",\n      children: keyInfoSets.map(infoSet => {\n        const strategy = strategies[infoSet] || [0.5, 0.5];\n        const passProb = Math.round(strategy[0] * 100);\n        const betProb = Math.round(strategy[1] * 100);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-set-description\",\n            children: getInfoSetDescription(infoSet)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"probability-bars\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"probability-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"probability-label\",\n                children: [\"PASS: \", passProb, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"probability-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pass-bar\",\n                  style: {\n                    width: `${passProb}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"probability-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"probability-label\",\n                children: [\"BET: \", betProb, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"probability-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bet-bar\",\n                  style: {\n                    width: `${betProb}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, infoSet, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = StrategyVisualizer;\nexport default StrategyVisualizer;\nvar _c;\n$RefreshReg$(_c, \"StrategyVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StrategyVisualizer","strategies","getInfoSetDescription","infoSet","card","actions","split","cardName","length","keyInfoSets","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","strategy","passProb","Math","round","betProb","style","width","_c","$RefreshReg$"],"sources":["/Users/vc/Desktop/仅作为副本/frontend/src/components/StrategyVisualizer.js"],"sourcesContent":["import React from 'react';\nimport './StrategyVisualizer.css';\n\nconst StrategyVisualizer = ({ strategies }) => {\n  // Helper function to get readable information set descriptions\n  const getInfoSetDescription = (infoSet) => {\n    const [card, ...actions] = infoSet.split(':');\n    \n    let cardName;\n    switch (card) {\n      case '1':\n        cardName = 'Jack';\n        break;\n      case '2':\n        cardName = 'Queen';\n        break;\n      case '3':\n        cardName = 'King';\n        break;\n      default:\n        cardName = card;\n    }\n    \n    if (actions.length === 0) {\n      return `${cardName} (First to act)`;\n    } else if (actions[0] === 'BET') {\n      return `${cardName} (After opponent bet)`;\n    } else if (actions[0] === 'PASS') {\n      return `${cardName} (After opponent pass)`;\n    }\n    \n    return infoSet;\n  };\n\n  // Filter out the most important information sets to display\n  const keyInfoSets = [\n    \"1:\", \"2:\", \"3:\",\n    \"1:BET\", \"2:BET\", \"3:BET\",\n    \"1:PASS\", \"2:PASS\", \"3:PASS\"\n  ];\n\n  return (\n    <div className=\"strategy-visualizer\">\n      <h3>CFR Strategy Probabilities</h3>\n      <div className=\"strategy-grid\">\n        {keyInfoSets.map(infoSet => {\n          const strategy = strategies[infoSet] || [0.5, 0.5];\n          const passProb = Math.round(strategy[0] * 100);\n          const betProb = Math.round(strategy[1] * 100);\n          \n          return (\n            <div key={infoSet} className=\"strategy-card\">\n              <div className=\"info-set-description\">{getInfoSetDescription(infoSet)}</div>\n              <div className=\"probability-bars\">\n                <div className=\"probability-bar-container\">\n                  <div className=\"probability-label\">PASS: {passProb}%</div>\n                  <div className=\"probability-bar\">\n                    <div \n                      className=\"pass-bar\" \n                      style={{ width: `${passProb}%` }}\n                    ></div>\n                  </div>\n                </div>\n                <div className=\"probability-bar-container\">\n                  <div className=\"probability-label\">BET: {betProb}%</div>\n                  <div className=\"probability-bar\">\n                    <div \n                      className=\"bet-bar\" \n                      style={{ width: `${betProb}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default StrategyVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}